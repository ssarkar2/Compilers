on:
  push:
    branches:
     - main
  pull_request:
    branches:
     - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip

      - uses: actions/setup-node@v2-beta
        with:
            node-version: '12'
      - name: Install TypeScript tools
        run: cd bril-ts ; yarn ; yarn build ; yarn link

      - uses: actions/setup-python@v2
        with:
            python-version: 3.8
      - name: Install Flit
        run: pip install flit
      - name: Install Python tools
        run: cd bril-txt ; flit install --symlink

      - name: Install Turnt
        run: pip install turnt
      - name: Problem matcher
        run: echo '::add-matcher::.github/tap-matcher.json'
      - name: Tests
        run: PATH=$PATH:`yarn global bin` make test TURNTARGS=-v

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: TrueBrain/actions-flake8@master
        with:
          path: bril-txt

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'
      - name: mdbook
        run: mdbook build
      - name: rsync
        if: ${{github.event_name=='push' && github.ref=='refs/heads/master'}}
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          DEPLOY_KNOWN_HOSTS: ${{ secrets.DEPLOY_KNOWN_HOSTS }}
          DEPLOY_SRC: ./book/
          DEPLOY_DEST: sync/bril-book
          DEPLOY_2_HOST: courses
          DEPLOY_2_DEST: coursewww/capra.cs.cornell.edu/htdocs/bril
        run: |
          echo "$DEPLOY_KEY" > pk
          echo "$DEPLOY_KNOWN_HOSTS" > kh
          chmod 600 pk
          rsync --compress --recursive --checksum --itemize-changes --delete \
            -e "ssh -p \"$DEPLOY_PORT\" -i pk -o 'UserKnownHostsFile kh'" \
            $DEPLOY_SRC $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_DEST
          ssh -p $DEPLOY_PORT -i pk -o 'UserKnownHostsFile kh' \
            $DEPLOY_USER@$DEPLOY_HOST \
            rsync --compress --recursive --checksum --itemize-changes \
            --delete -e ssh --perms --chmod=Du=rwx,Dgo=rx,Fu=rw,Fog=r \
            $DEPLOY_DEST/ $DEPLOY_2_HOST:$DEPLOY_2_DEST
